<script>

  var MAX_TERM_LENGTH = <%= Badge::MAX_TERM_LENGTH %>;

  $(document).ready(function() {
    <% if @allow_url_editing %>
      // Auto set the URL as they type the name
      $('#badge_name').keyup(function() {
        $('#badge_url_with_caps').val(parameterizeText($(this).val()));
        $('#url-preview-label').text(parameterizeText($(this).val()));
        if (($('#badge_url_with_caps').val().length > 0) && !$("#url-panel").is(":visible"))
          $("#url-panel").fadeIn();
        else if (($('#badge_url_with_caps').val().length == 0) && $("#url-panel").is(":visible"))
          $("#url-panel").fadeOut();
      });

      // Only allow url characters in the manual url box and update the label as they type
      $('#badge_url_with_caps').keyup(function() {
        $(this).val(parameterizeText($(this).val()));
        $('#url-preview-label').text($(this).val());
      });

      $("#url-edit").click(function() {
        $("#url-preview").hide();
        $("#url-editor").show();
        $('#badge_url_with_caps').focus();
      });
      $("#url-save").click(function() {
        $("#url-editor").hide();
        $("#url-preview").show();
        $('#badge_summary').focus();
      });
      $("#url-cancel").click(function() {
        $('#badge_url_with_caps').val(parameterizeText($("#badge_name").val()));
        $('#url-preview-label').text(parameterizeText($("#badge_name").val()));
        $("#url-editor").hide();
        $("#url-preview").show();
      });
    <% end %>

    // Create events to add custom badge terms
    
    $("#badge_word_for_expert").append("<option value disabled='disabled'>-----</option>");
    $("#badge_word_for_expert").append("<option value='*' class='select-hr'>+ Add Word</option>");
    $("#badge_word_for_expert").change(function() {
      if ($(this).val() == "*") {
        var customValue = prompt("People who have earned the badge are called 'badge _____'", 'learners');

        if ((customValue != null) && (customValue.trim().length > MAX_TERM_LENGTH)) {
          alert('Your word must be less than ' + (MAX_TERM_LENGTH+1) + ' characters. Please try again.');
          $(this).val('expert');
        } else if ((customValue != null) && (customValue.trim() != '')) {
          customValue = customValue.trim();
          $(this).append("<option value='" + customValue + "'>" + customValue + "</option>");
          $(this).val(customValue);
          $(this).focus();
        } else {
          $(this).val('expert');
        }
      }
    });

    $("#badge_word_for_learner").children().first().text("< None >") // Label the blank value
    $("#badge_word_for_learner").append("<option value disabled='disabled'>-----</option>");
    $("#badge_word_for_learner").append("<option value='*' class='select-hr'>+ Add Word</option>");
    $("#badge_word_for_learner").change(function() {
      if ($(this).val() == "*") {
        var customValue = prompt("People tracking their progress towards earning the badge are "
          + "called 'badge _____'", 'experts');

        if ((customValue != null) && (customValue.trim().length > MAX_TERM_LENGTH)) {
          alert('Your word must be less than ' + (MAX_TERM_LENGTH+1) + ' characters. Please try again.');
          $(this).val('learner');
        } else if ((customValue != null) && (customValue.trim() != '')) {
          customValue = customValue.trim();
          $(this).append("<option value='" + customValue + "'>" + customValue + "</option>");
          $(this).val(customValue);
          $(this).focus();
        } else {
          $(this).val('learner');
        }
      } else if (($(this).val() == "") && ($('#toggle-progress-tracking').data('status') == 'on')) {
        toggleProgressTracking();
      } else if (($(this).val() != "") && ($('#toggle-progress-tracking').data('status') == 'off')) {
        toggleProgressTracking();
      }
    });

    // Add popover
    $("#progress-tracking-explanation").popover({
      title: "<a class='pull-right' href='#' "
        + "onclick=\"$('#progress-tracking-explanation').popover('hide')\" "
        + "title='Dismiss this message'><i class='fa fa-times'></i></a> "
        + "What is progress tracking?",
      content: "Badge List helps you track the progress of people working to earn the badge by "
        + "letting them post entries to a progress log.<br><br>"
        + "This functionality is <i>optional</i>.  "
        + "Itâ€™s up to you to decide whether keeping track of progress is an important part of "
        + "this badge.  You can change this setting at any time.",
      placement: "bottom",
      trigger: "click",
      container: "body",
      html: true
    });

  });

  function toggleExtraInfo() {
    if ($('#form-extra-info').is(':visible')) {
      $('#form-extra-info').slideUp();
      $('#form-extra-info-toggle').val('Show Settings')
      $('#group_name').focus()
    } else {
      $('#form-extra-info').slideDown();
      $('#form-extra-info-toggle').val('Hide Settings')
      $('#group_location').focus()
    }
  }

  function toggleProgressTracking() {
    var buttonElement = $('#toggle-progress-tracking');
    var selectElement = $('#badge_word_for_learner');

    if (buttonElement.data('status') == 'on') {
      selectElement.data('previous-value', selectElement.val());
      selectElement.val("");
      buttonElement.text('Turn on progress tracking for this badge');
      buttonElement.data('status', 'off');
      $('.learner-word-row').addClass('disabled');
      // $('.learner-word-row.value-row select').prop('disabled', true);
    } else {
      var previousValue = selectElement.data('previous-value');
      if ((previousValue == null) || (previousValue == "")) previousValue = 'learner';
      if (selectElement.val() == "") selectElement.val(previousValue);
      buttonElement.text('Turn off progress tracking for this badge');
      buttonElement.data('status', 'on');
      $('.learner-word-row').removeClass('disabled');
      // $('.learner-word-row.value-row select').prop('disabled', false);
    }
  }

  // Converts "Test text like  this" > "Text-text-like-this"
  function parameterizeText(s) {
    var returnValue = '';

    if (s != null) 
      returnValue = s.trim().replace(/['.]/g, '').replace(/[^ A-Za-z0-9]/g, ' ')
        .replace(/ +/g, ' ').replace(/ /g, '-');
    if (returnValue.substr(0, 1) == "-") returnValue = returnValue.substr(1)
    if (returnValue.substr(returnValue.length - 1) == "-") 
      returnValue = returnValue.substr(0, returnValue.length - 1)

    return returnValue
  }

</script>

<%= simple_form_for [@group, @badge], html: {class: 'form-horizontal'} do |f| %>
  <%= f.error_notification %>

  <div class="form-body">
    
    <%= f.input :name, label: 'Badge Name', placeholder: 'Extraterrestrial Physics Expert', autofocus: true,
      input_html: { class: 'input-xlarge', maxlength: Badge::MAX_NAME_LENGTH, 
        data: { toggle: 'tooltip',
      title: 'Examples: Excel Spreadsheet Ninja, 2014 Hackathon Attendee, Acme Community Leader' } } %>
    
    <div id="url-panel" style="<%= (@badge.new_record?) ? 'display: none;' : '' %>">
      <label for="badge_url_with_caps">URL: </label>
        
      <span id="url-preview">
        "<span id="url-preview-label"><%= @badge.url_with_caps %></span>"
        <% if @allow_url_editing  %>
          <a href="#" id="url-edit" class="btn btn-small btn-link">Edit</a>
        <% else %>
          <i class="fa fa-lock" data-toggle="tooltip" 
          title="You cannot edit the URL after the badge has been awarded."></i>
        <% end %>
      </span>
    
      <% if @allow_url_editing  %>
        <span id="url-editor" style="display: none;">
          <%= f.text_field :url_with_caps %>
          <ul class="unstyled">
            <li><a href="#" id="url-save" class="btn btn-small btn-link">
              <i class="fa fa-check"></i>
            </a></li>
            <li><a href="#" id="url-cancel" class="btn btn-small btn-link">
              <i class="fa fa-remove"></i>
            </a></li>
          </ul>
        </span>
      <% end %>
    </div>

    <%= f.input :summary, as: :text, label: 'Summary', input_html: { data: {
        :'character-count' => true, :'max-length' => Badge::MAX_SUMMARY_LENGTH,
        toggle: 'tooltip', title: 'Explain clearly what badge earners have accomplished' } } %>

    <%= f.input :topic_list_text, as: :text, label: 'Required Evidence', 
      input_html: { 
        title: ("Each line item you type gets its own page where you can write " \
        + "a full explanation and let badge members post evidence.").html_safe,
        placeholder: 'Enter a list of short phrases. (One per line.)',
        data: { toggle: 'tooltip'} 
      } %>
      
    <!-- === BADGE IMAGE MAKER === -->

    <%= render 'shared/badge_maker', f: f %>

    <% if @current_user_is_admin %>

      <h2>
        Permissions &amp; Notifications
        <input class="btn btn-link" type="button" id="form-extra-info-toggle" 
          value="Show Settings" onclick="toggleExtraInfo()" />
      </h2>

      <div id="form-extra-info" style="display:none">
        <%= f.input :editability, as: :select, label: 'Who can edit the badge?', 
          include_blank: false, collection: @badge_editability_options %>

        <%= f.input :awardability, as: :select, label: 'Who can award the badge?', 
          include_blank: false, collection: @badge_awardability_options %>

        <%= f.input :send_validation_request_emails, as: :select, include_blank: false,
          label: 'Validation request emails', collection: @send_email_options, 
          hint: 'By default, validation request emails are sent automatically to those who can ' \
            + 'award the badge whenever a learner completes all of the badge requirements.' %>
      </div>

    <% end %>

  </div>
  
  <div class="form-footer">
    <%= f.button :submit, class: 'btn btn-primary' %>
    <%= 
      if @badge.new_record?
        link_to "Cancel", @group, class: "btn"
      else 
        link_to "Cancel", group_badge_path(@group, @badge), class: "btn"
      end
    %>
  </div>
<% end %>
